## 9/29 **THU**

## 🌕시작시간 : 07H 08M

## 🌑종료시간 : 23H 59M

### ⏰***공부시간  11H 15M***

- [x]  스프링 08:34
- [x]  for문 알고리즘 02:06
- [x]  개발도서 00:34

## 🧐오늘 한일

- [x]  과외
- [x]  JPA 활용1
- [ ]  DB
- [x]  알고리즘 문제풀이
- [x]  개발도서읽기

## 🔥내일계획표

- [ ]  스프링부트
- [ ]  JPA활용2
- [ ]  DB
- [ ]  알고리즘 문제풀이
- [ ]  개발도서읽기

## **💁‍♂️ 오늘의 짧은 회고**

테스트 시 실제 DB 와 TEST DB 의 yml 설정 파일을 따로 나누어 사용하는 것이 좋은 방법이다.
단위테스트가 가장 좋다 → MOCK 사용, DB 묶지않고 순수한 테스트로 진행하는 방법

엔티티 안에서 비즈니스 로직을 가지는 것이 좋다 → 도메인 모델 패던


화면 Controller
Model : 데이터를 같이 포함한다. 
model.addAttribute(”memberForm”, new MemberForm));
th:object =${memberForm}
사용 th:field=*{name} 은 name =”name”, id =”name” 과 같다. 
로직이 간단하더라도 Entity를 화면로직에 사용하지 말자 → 따로 form 클래스를 만들자
화면에 뿌릴때는 DTO 를 사용하자 → API 를 만들때는 DTO 가 필수이다.

상품수정 → 방법은 변경감지와 병합 2가지가 있다.
병합은 모든 데이터가 바뀐다. 쓰지말고 변경감지를 사용하자

Validation 
API 마다 다르게 사용될 수 있기 때문에 Entity에 Validation을 적용시키지 말기
DTO 를 만들어 따로 적용
